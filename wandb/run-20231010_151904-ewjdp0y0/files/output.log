{
    "dataset": "CIFAR100",
    "num_class": 100,
    "epochs": 90,
    "num_layers": 3,
    "layer_list": [
        "Conv2d",
        "Conv2d",
        "Conv2d"
    ],
    "activation_list": [
        "ReLU",
        "ReLU",
        "ReLU"
    ],
    "layer_size_list": [
        3,
        32,
        64,
        128
    ],
    "kernel_size_list": [
        3,
        3,
        3
    ],
    "padding_list": [
        0,
        0,
        0
    ],
    "stride_list": [
        1,
        1,
        1
    ],
    "dropout_list": [
        0.2,
        0.3,
        0.4
    ],
    "num_fc_layers": 2,
    "fc_layer_size_list": [
        512,
        128,
        10
    ],
    "img_width": 32
}
Model(
  (conv): Sequential()
  (layers): ModuleList(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1))
    (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Dropout(p=0.2, inplace=False)
    (5): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1))
    (6): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): ReLU()
    (8): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (9): Dropout(p=0.3, inplace=False)
    (10): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))
    (11): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (12): ReLU()
    (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (14): Dropout(p=0.4, inplace=False)
  )
  (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (fc_layers): ModuleList(
    (0): Linear(in_features=512, out_features=128, bias=True)
    (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU()
    (3): Dropout(p=0.2, inplace=False)
    (4): Linear(in_features=128, out_features=10, bias=True)
  )
)
using cpu
Traceback (most recent call last):
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 1348, in do_open
    h.request(req.get_method(), req.selector, req.data, headers,
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/http/client.py", line 1283, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/http/client.py", line 1329, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/http/client.py", line 1278, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/http/client.py", line 1038, in _send_output
    self.send(msg)
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/http/client.py", line 976, in send
    self.connect()
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/http/client.py", line 1455, in connect
    self.sock = self._context.wrap_socket(self.sock,
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/ssl.py", line 517, in wrap_socket
    return self.sslsocket_class._create(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/ssl.py", line 1075, in _create
    self.do_handshake()
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/ssl.py", line 1346, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/Users/enze/workspace/CSCI646_CNN/test_run.py", line 190, in <module>
    main()
  File "/Users/enze/workspace/CSCI646_CNN/test_run.py", line 51, in main
    train_loader, test_loader = get_dataset(config)
                                ^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/workspace/CSCI646_CNN/dataset/dataset.py", line 25, in get_dataset
    train_dataset = torchvision.datasets.CIFAR100(root=data_folder_path, download=True, train=True,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/workspace/CSCI646_CNN/venv/lib/python3.11/site-packages/torchvision/datasets/cifar.py", line 65, in __init__
    self.download()
  File "/Users/enze/workspace/CSCI646_CNN/venv/lib/python3.11/site-packages/torchvision/datasets/cifar.py", line 139, in download
    download_and_extract_archive(self.url, self.root, filename=self.filename, md5=self.tgz_md5)
  File "/Users/enze/workspace/CSCI646_CNN/venv/lib/python3.11/site-packages/torchvision/datasets/utils.py", line 434, in download_and_extract_archive
    download_url(url, download_root, filename, md5)
  File "/Users/enze/workspace/CSCI646_CNN/venv/lib/python3.11/site-packages/torchvision/datasets/utils.py", line 134, in download_url
    url = _get_redirect_url(url, max_hops=max_redirect_hops)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/workspace/CSCI646_CNN/venv/lib/python3.11/site-packages/torchvision/datasets/utils.py", line 82, in _get_redirect_url
    with urllib.request.urlopen(urllib.request.Request(url, headers=headers)) as response:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 216, in urlopen
    return opener.open(url, data, timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 519, in open
    response = self._open(req, data)
               ^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 536, in _open
    result = self._call_chain(self.handle_open, protocol, protocol +
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 496, in _call_chain
    result = func(*args)
             ^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 1391, in https_open
    return self.do_open(http.client.HTTPSConnection, req,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/enze/Programs/Anaconda3.11/anaconda3/lib/python3.11/urllib/request.py", line 1351, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)>